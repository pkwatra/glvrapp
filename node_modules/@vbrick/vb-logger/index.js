'use strict';

var path = require('path');
var winston = require('winston');
var winstonError = require('winston-error');
var mkdirp = require('mkdirp');
var objectAssign = require('object-assign'); //todo remove in ES6 code
var conf = require('./config');

winston.addColors({
	debug: 'green',
	info: 'green',
	error: 'red',
	warn: 'yellow'
});

var transports = [];

transports.push(new (winston.transports.Console)({
	colorize: true,
	level: conf.consoleLevel,
	handleExceptions: conf.handleExceptions,
	prettyPrint: conf.prettyPrint
}));

if (conf.file && conf.file.filename) {
	mkdirp.sync(path.dirname(conf.file.filename));
	var fileConfig = objectAssign({}, {
		handleExceptions: conf.handleExceptions
	}, conf.file);
	transports.push(new (winston.transports.File)(fileConfig));
}

if (conf.logstash && conf.logstash.host && conf.logstash.port) {
	var logstashConfig = objectAssign({}, {
		handleExceptions: conf.handleExceptions
	}, conf.logstash);
	require('winston-logstash');
	var winstonLogstash = new (winston.transports.Logstash)(logstashConfig);
	winstonLogstash.on('error', function(err) {
		console.log('Error connecting to logstash', err)
	})
	transports.push(winstonLogstash);
}

var logger = new winston.Logger({
	transports: transports
});

winstonError(logger);

logger.stream = createStream('debug');
logger.infoStream = createStream('info');

function createStream(level) {
	return {
		write: function(message, encoding) {
			logger[level](message.replace(/\n$/, ''));
		}
	};
}

module.exports = logger;
